.speakers {
  @include respond-to(large) {
    color: color(light);

    padding-bottom: space(xlarge) * 1.5;
  }

  .all-speaker {
    max-width: rem(1080px);

    @include respond-to(large) {
      display: flex;
      flex-wrap: wrap;
    }
  }
}

.speaker {
  max-width: rem(260px);
  margin: space(medium) auto;

  overflow: hidden;

  transition: filter 0.4s ease-in;

  @include respond-to(large) {
    margin: 0;
    position: relative;

    &:nth-child(3n),
    &:nth-child(3n+1),
    &:first-child {
      top: rem(50px);
    }
  }

  &:hover {
    @include respond-to(large) {
      -webkit-filter: grayscale(1);
      -moz-filter: grayscale(1);
      filter: grayscale(1);
    }

    > .info {
      @include respond-to(large) {
        background: rgba(0, 0, 0, 0.4);
        top: 100%;

        transform: translateY(-100%);
      }
    }
  }

  img {
    display: block;
    height: rem(350px);
    width: rem(260px);

    overflow: hidden;
  }

  .info {
    margin: space(small) auto;

    z-index: layer(highest);

    transition: background 3s linear;
    transition-delay: 1s;

    @include respond-to(large) {
      height: rem(350px);
      position: absolute;

      margin: 0;
      padding-left: rem(10px);
      padding-top: rem(10px);

      text-align: left;

      transition: transform 0.5s ease-in-out;
    }

    h4 {
      color: color(dark, darkest);
      font-size: font-size(large);

      &::before,
      &::after {
        color: color(primary);
        font-weight: bold;
      }

      &::before {
        content: "<";
        margin-right: em(space(xsmall));
      }

      &::after {
        content: ">";
        margin-left: em(space(xsmall));
      }
    }

    a {
      color: color(dark);
      margin: {
        top: space(small);
        bottom: space(small);
      };

      @include respond-to(large) {
        color: color(light, dark);
      }
    }

    p {
      @include respond-to(large) {
        font-size: font-size(small);
      }
    }
  }
}

