/// Retorna o espaçamento em `rem` de acordo com o tamanho informado. O valor
/// retornado será exatamente igual ao CSS, ou seja, devemos informar os
/// espaçamentos seguindo a ordem `top`, `right`, `bottom` e `left`.
///
/// @group   Tools [Ferramentas]
///
/// @return  {list | number} - Valor correspondente à chave desejada ou uma
///          lista com as chaves solicitadas
///
/// @param   {arglist} $positions - Lista dos espaçamentos desejados. Pode ser
///          uma lista de 1 a 4 espaçamentos
///
/// @example scss - Uso
///   .classe-qualquer {
///     padding: space(medium);
///     margin-top: space(xsmall) + rem(10px);
///   }
///   .classe-qualquer {
///     margin: space(medium, large);
///   }
///   .classe-qualquer {
///     padding: space(small, medium, large);
///   }
///   .classe-qualquer {
///     margin: space(small, medium, large, xlarge);
///   }
///
/// @example scss - Compilado
///   .classe-qualquer {
///     padding: 1.25rem;
///     margin-top: 0.625rem;
///   }
///   .classe-qualquer {
///     margin: 1.25rem 1.875rem;
///   }
///   .classe-qualquer {
///     padding: 0.625rem 1.25rem 1.875rem;
///   }
///   .classe-qualquer {
///     margin: 0.625rem 1.25rem 1.875rem 3.125rem;
///   }
@function space($positions...) {
  $result: null;

  @if not variable-exists(spaces) {
    @warn 'O mapa `$spaces` nao existe. Por favor o crie e tente novamente!';
  } @else if not function-exists(rem) {
    @warn 'A funcao `rem` nao foi encontrada!';
  } @else {
    $qde: length($positions);

    @if $qde < 1 or $qde > 4 {
      @warn 'Informe uma quantidade entre 1 e 4 espacamentos!';
    } @else {
      @for $i from 1 through $qde {
        $size: nth($positions, $i);

        @if not map-has-key($spaces, $size) {
          @if $size == 'grid' {
            @if not variable-exists(grid) {
              @warn 'O mapa `$grid` nao existe. Por favor o crie e tente novamente!';
            } @else {
              $result: rem(map-get($grid, spacement));
            }
          } @else {
            @warn 'A chave "#{$size}" nao existe no mapa `$spaces`';
          }
        } @else {
          $valor: rem(map-get($spaces, $size));

          @if $qde == 1 {
            $result: $valor;
          } @else {
            $result: append($result, $valor);
          }
        }
      }
    }
  }

  @return $result;
}
