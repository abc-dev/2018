/* line 12, src/styles/objects/_reset.scss */
html, body, main, article, nav, aside, section,
header, footer, address, div,
h1, h2, h3, h4, h5, h6, p, blockquote, ol, ul, li, dl, dt, dd,
hr, pre, figure, figcaption,
table, caption, thead, tbody, tfoot, tr, th, td, col, colgroup,
form, fieldset, legend, label, input, button, select, datalist,
optgroup, option, textarea, progress, meter,
img, iframe, embed, object, param, video, audio, source,
canvas, track, map, area, del, ins,
a, em, strong, i, b, u, s, small, abbr, q, cite, dfn, sub, sup,
time, code, kbd, samp, var, bdi, bdo, ruby, rt, rp, wbr,
mark, span, br {
  padding: 0;
  margin: 0;
  font-size: 100%;
  font-style: normal;
  font-weight: normal;
  vertical-align: baseline;
  background: transparent;
  box-sizing: border-box;
}

/* line 36, src/styles/objects/_reset.scss */
button,
select,
textarea,
input {
  max-width: 100%;
  color: inherit;
  font-family: inherit;
  line-height: inherit;
  vertical-align: middle;
}

/* line 48, src/styles/objects/_reset.scss */
button::-moz-focus-inner {
  border: 0;
}

/* line 53, src/styles/objects/_reset.scss */
a {
  text-decoration: none;
}

/* line 57, src/styles/objects/_reset.scss */
img,
svg {
  max-width: 100%;
  border: 0;
}

/* line 62, src/styles/objects/_reset.scss */
a img, a
svg {
  display: block;
}

/* line 67, src/styles/objects/_reset.scss */
ul,
ol {
  list-style-type: none;
}

/* line 72, src/styles/objects/_reset.scss */
hr {
  border: 0;
}

/* line 76, src/styles/objects/_reset.scss */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* line 81, src/styles/objects/_reset.scss */
caption,
th,
td {
  text-align: left;
}

/* line 87, src/styles/objects/_reset.scss */
::after,
::before {
  box-sizing: inherit;
}

/* line 95, src/styles/objects/_reset.scss */
input:-webkit-autofill,
select:-webkit-autofill,
textarea:-webkit-autofill {
  transition-delay: 999999s;
}

/* line 1, src/styles/components/_header.scss */
.cover {
  background-image: url(../images/backgrounds/sao-caetano-do-sul.jpg);
  background-size: cover;
  background-repeat: no-repeat;
  background-color: rgba(0, 0, 0, 0.3);
  color: #fff;
  position: relative;
  z-index: 930;
  min-height: 100vh;
  overflow: hidden;
}

@media (min-width: 62em) {
  /* line 1, src/styles/components/_header.scss */
  .cover {
    background-size: auto;
    background-position: bottom right;
    background-color: rgba(0, 0, 0, 0.3);
    height: 100vh;
  }
}

/* line 27, src/styles/components/_header.scss */
.cover::before, .cover::after {
  content: '';
  display: inline-block;
  width: 100%;
  height: 100vh;
  display: none;
  position: absolute;
  z-index: -1;
  width: 100%;
  background-size: cover;
  background-repeat: no-repeat;
}

@media (min-width: 62em) {
  /* line 27, src/styles/components/_header.scss */
  .cover::before, .cover::after {
    display: block;
  }
}

/* line 47, src/styles/components/_header.scss */
.cover::before {
  -webkit-transform: skewY(13deg) translateY(-63vh);
          transform: skewY(13deg) translateY(-63vh);
  background-color: rgba(255, 255, 255, 0.5);
  background-position: 70% 0;
  opacity: .7;
}

/* line 59, src/styles/components/_header.scss */
.cover::after {
  -webkit-transform: skewY(-15deg) translateY(-28vh);
          transform: skewY(-15deg) translateY(-28vh);
  background-color: rgba(0, 0, 0, 0.3);
}

/* line 67, src/styles/components/_header.scss */
.cover .social-media {
  position: absolute;
  bottom: 1.25rem;
  text-align: center;
  width: 100%;
}

@media (min-width: 62em) {
  /* line 67, src/styles/components/_header.scss */
  .cover .social-media {
    right: 0;
    text-align: right;
  }
}

/* line 79, src/styles/components/_header.scss */
.cover .hashtags {
  display: none;
}

@media (min-width: 62em) {
  /* line 79, src/styles/components/_header.scss */
  .cover .hashtags {
    display: block;
    position: absolute;
    top: 50%;
    right: 0;
    max-width: 35%;
    text-align: right;
    font-size: 2.5rem;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    padding: 0.625rem;
  }
}

/* line 97, src/styles/components/_header.scss */
.cover .hashtags a {
  text-shadow: 0.0625rem 0.0625rem 0.1875rem #000000;
  color: #fff;
  border-color: #fdc200;
}

/* line 102, src/styles/components/_header.scss */
.cover .hashtags a + a {
  margin-top: 0.3125rem;
}

/* line 106, src/styles/components/_header.scss */
.cover .hashtags a:hover, .cover .hashtags a:focus {
  text-shadow: none;
  color: #000000;
  border-color: #000000;
}

/* line 115, src/styles/components/_header.scss */
.cover .wrapper {
  position: relative;
  height: 100vh;
}

@media (min-width: 62em) {
  /* line 115, src/styles/components/_header.scss */
  .cover .wrapper {
    z-index: 50;
    width: 100%;
  }
}

/* line 125, src/styles/components/_header.scss */
.cover time {
  display: block;
  margin-top: 1.875rem;
  margin-bottom: 1.875rem;
  font-size: 2.125rem;
  font-weight: bold;
  color: #fdc200;
  text-shadow: 0.0625rem 0.0625rem 0.1875rem #000000;
}

@media (min-width: 62em) {
  /* line 125, src/styles/components/_header.scss */
  .cover time {
    margin-bottom: 1.25rem;
  }
}

/* line 142, src/styles/components/_header.scss */
.cover p {
  font-weight: bold;
  margin-bottom: 3.75rem;
}

@media (min-width: 62em) {
  /* line 142, src/styles/components/_header.scss */
  .cover p {
    margin-bottom: 1.25rem;
  }
}

/* line 151, src/styles/components/_header.scss */
.cover .logo {
  position: relative;
  display: block;
  text-align: left;
  width: 50%;
  max-width: 330px;
}

@media (min-width: 62em) {
  /* line 151, src/styles/components/_header.scss */
  .cover .logo {
    margin: 1.875rem auto;
    text-align: center;
  }
}

/* line 163, src/styles/components/_header.scss */
.cover .logo img {
  position: relative;
  z-index: 50;
}

/* line 169, src/styles/components/_header.scss */
.cover .intro {
  color: #fff;
  text-shadow: 0.0625rem 0.0625rem 0.1875rem #000000;
}

@media (min-width: 62em) {
  /* line 169, src/styles/components/_header.scss */
  .cover .intro {
    position: absolute;
    top: 48%;
    left: 0;
    width: 50%;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
  }
}

/* line 181, src/styles/components/_header.scss */
.cover .intro h1 {
  margin: 1.875rem 0;
}

/* line 185, src/styles/components/_header.scss */
.cover .intro h2 {
  color: #fff;
  display: none;
  margin: 1.875rem 0;
}

/* line 190, src/styles/components/_header.scss */
.cover .intro h2::before, .cover .intro h2::after {
  content: none;
}

@media (min-width: 62em) {
  /* line 185, src/styles/components/_header.scss */
  .cover .intro h2 {
    display: block;
  }
}

/* line 200, src/styles/components/_header.scss */
.cover .intro .buy {
  display: block;
  margin: 1.875rem auto;
  padding: 0.625rem;
  width: 12.5rem;
  background: #fdc200;
  box-shadow: 0.0625rem 0.0625rem 0.3125rem #333;
  border-radius: 0.25rem;
  color: #000000;
  text-transform: uppercase;
  text-shadow: none;
  font-weight: bold;
  text-decoration: none;
  border: 0;
}

/* line 217, src/styles/components/_header.scss */
.cover .intro .buy:hover, .cover .intro .buy:focus {
  background-color: #ffedb1;
}

/* line 222, src/styles/components/_header.scss */
.cover .intro .buy:active {
  background-color: #4b3900;
  color: #fff;
}

/* line 229, src/styles/components/_header.scss */
.cover .is-fixed {
  position: fixed;
  top: 0;
  left: 50%;
  width: 100%;
  padding: 0.625rem 6.25vw;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  background-color: #fff;
  box-shadow: 0.0625rem 0.0625rem 0.1875rem #000000;
}

/* line 240, src/styles/components/_header.scss */
.cover .is-fixed .mobile-nav {
  color: #333333;
  text-shadow: none;
}

/* line 1, src/styles/components/_main-nav.scss */
.main-nav {
  background: #fdc200;
  position: fixed;
  top: 0;
  right: 0;
  height: 100%;
  width: 85vw;
  padding-top: 3.75rem;
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
  transition: -webkit-transform 0.6s ease-out;
  transition: transform 0.6s ease-out;
  transition: transform 0.6s ease-out, -webkit-transform 0.6s ease-out;
  z-index: 950;
}

@media (min-width: 62em) {
  /* line 1, src/styles/components/_main-nav.scss */
  .main-nav {
    background-color: #f4d11e;
    box-shadow: 0 0 0.3125rem 0.125rem rgba(0, 0, 0, 0.4);
    -webkit-transform: translate(0);
            transform: translate(0);
    width: 100%;
    height: auto;
    padding: 0.3125rem;
  }
}

/* line 30, src/styles/components/_main-nav.scss */
.main-nav a {
  display: block;
  text-align: right;
  padding: 0.625rem 1.25rem;
  font-size: 1.25rem;
  text-transform: uppercase;
}

@media (min-width: 62em) {
  /* line 30, src/styles/components/_main-nav.scss */
  .main-nav a {
    display: inline-block;
    text-transform: none;
    padding: 0.25rem 0.375rem;
    margin-left: 0.625rem;
    margin-right: 0.625rem;
    border: 0;
  }
}

/* line 52, src/styles/components/_main-nav.scss */
.main-nav a:hover, .main-nav a:focus {
  text-shadow: none;
  color: #fff;
  background-color: #000000;
}

@media (min-width: 62em) {
  /* line 60, src/styles/components/_main-nav.scss */
  .main-nav .go-to-start {
    display: none;
  }
}

/* line 65, src/styles/components/_main-nav.scss */
.main-nav .go-to-start span {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  border: 0;
}

/* line 70, src/styles/components/_main-nav.scss */
.main-nav.is-active {
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

/* line 75, src/styles/components/_main-nav.scss */
.social-media {
  text-align: center;
  word-spacing: 1.25rem;
}

/* line 79, src/styles/components/_main-nav.scss */
.social-media a {
  border-radius: 50%;
  border: 0;
  padding: 0.125rem;
  background-color: transparent;
}

/* line 85, src/styles/components/_main-nav.scss */
.social-media a:hover, .social-media a:focus {
  color: #333;
}

/* line 92, src/styles/components/_main-nav.scss */
.mobile-nav {
  display: block;
  background: #333333;
  border: 0;
  outline: none;
  position: absolute;
  cursor: pointer;
  top: 1.25rem;
  right: 0;
  height: 0.3125rem;
  width: 1.875rem;
  text-shadow: 0.0625rem 0.0625rem 0.125rem #333, 0 0 0.2em #333;
  transition: background-color 0.2s linear;
  z-index: 950;
}

@media (min-width: 62em) {
  /* line 92, src/styles/components/_main-nav.scss */
  .mobile-nav {
    display: none;
  }
}

/* line 116, src/styles/components/_main-nav.scss */
.mobile-nav:before, .mobile-nav:after {
  content: '';
  display: inline-block;
  width: 0.3125rem;
  height: 1.875rem;
  background: #333333;
  position: absolute;
  right: 0;
  transition: -webkit-transform 0.4s ease-in-out;
  transition: transform 0.4s ease-in-out;
  transition: transform 0.4s ease-in-out, -webkit-transform 0.4s ease-in-out;
}

/* line 128, src/styles/components/_main-nav.scss */
.mobile-nav:before {
  top: -0.625rem;
}

/* line 132, src/styles/components/_main-nav.scss */
.mobile-nav:after {
  top: 0.625rem;
}

/* line 136, src/styles/components/_main-nav.scss */
.mobile-nav span {
  display: block;
  min-width: 100%;
  min-height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  padding: 0.625rem 1.25rem;
  font-weight: 700;
}

/* line 147, src/styles/components/_main-nav.scss */
.mobile-nav.is-active {
  background-color: transparent;
  position: fixed;
  right: 1.875rem;
  z-index: 952;
}

/* line 154, src/styles/components/_main-nav.scss */
.mobile-nav.is-active:before, .mobile-nav.is-active:after {
  top: 0;
}

/* line 159, src/styles/components/_main-nav.scss */
.mobile-nav.is-active:before {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
}

/* line 163, src/styles/components/_main-nav.scss */
.mobile-nav.is-active:after {
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg);
}

/* line 167, src/styles/components/_main-nav.scss */
.mobile-nav.is-active span {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  border: 0;
}

/* line 3, src/styles/components/_about.scss */
.about-event h2 span {
  font-weight: bold;
  letter-spacing: 0.125rem;
}

/* line 9, src/styles/components/_about.scss */
.about-event svg {
  max-height: 2em;
  max-width: 2em;
  margin-right: 0.625rem;
}

/* line 1, src/styles/components/_speakers.scss */
.speakers {
  position: relative;
}

@media (min-width: 62em) {
  /* line 1, src/styles/components/_speakers.scss */
  .speakers {
    padding-bottom: 5.625rem;
  }
  /* line 8, src/styles/components/_speakers.scss */
  .speakers::before, .speakers::after {
    content: '';
    display: inline-block;
    width: 100%;
    height: 100vh;
    max-height: 59.375rem;
    position: absolute;
    top: 50%;
    z-index: -1;
  }
  /* line 19, src/styles/components/_speakers.scss */
  .speakers::before {
    background-color: #fdc200;
    -webkit-transform: skewY(13deg) translateY(-120%);
            transform: skewY(13deg) translateY(-120%);
  }
  /* line 24, src/styles/components/_speakers.scss */
  .speakers::after {
    background-color: #333333;
    -webkit-transform: skewY(-13deg) translateY(20%);
            transform: skewY(-13deg) translateY(20%);
  }
}

/* line 30, src/styles/components/_speakers.scss */
.speakers .all-speaker {
  position: relative;
  z-index: 50;
}

@media (min-width: 62em) {
  /* line 30, src/styles/components/_speakers.scss */
  .speakers .all-speaker {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    padding-top: 1.875rem;
  }
}

/* line 43, src/styles/components/_speakers.scss */
.speaker {
  max-width: 16.25rem;
  margin: 1.25rem auto;
  overflow: hidden;
  transition: -webkit-filter 0.4s ease-in;
  transition: filter 0.4s ease-in;
  transition: filter 0.4s ease-in, -webkit-filter 0.4s ease-in;
}

@media (min-width: 62em) {
  /* line 43, src/styles/components/_speakers.scss */
  .speaker {
    margin: 0;
    position: relative;
  }
}

@media (min-width: 62em) {
  /* line 56, src/styles/components/_speakers.scss */
  .speaker:hover {
    -webkit-filter: grayscale(1);
    -moz-filter: grayscale(1);
    filter: grayscale(1);
  }
}

@media (min-width: 62em) {
  /* line 63, src/styles/components/_speakers.scss */
  .speaker:hover > .info {
    background: rgba(0, 0, 0, 0.6);
    top: 100%;
    color: #fff;
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%);
  }
}

/* line 74, src/styles/components/_speakers.scss */
.speaker img {
  display: block;
  height: 21.875rem;
  width: 16.25rem;
  overflow: hidden;
}

/* line 82, src/styles/components/_speakers.scss */
.speaker .info {
  margin: 0.625rem auto;
  z-index: 930;
  transition: background 3s linear;
  transition-delay: 1s;
}

@media (min-width: 62em) {
  /* line 82, src/styles/components/_speakers.scss */
  .speaker .info {
    height: 21.875rem;
    position: absolute;
    margin: 0;
    padding-left: 0.625rem;
    padding-top: 1.25rem;
    text-align: left;
    transition: -webkit-transform 0.5s ease-in-out;
    transition: transform 0.5s ease-in-out;
    transition: transform 0.5s ease-in-out, -webkit-transform 0.5s ease-in-out;
  }
}

/* line 103, src/styles/components/_speakers.scss */
.speaker .info h4 {
  color: #000000;
  font-size: 1.25rem;
  margin-bottom: 0.625rem;
}

@media (min-width: 62em) {
  /* line 103, src/styles/components/_speakers.scss */
  .speaker .info h4 {
    text-align: center;
    color: #fff;
    font-weight: bold;
  }
}

/* line 114, src/styles/components/_speakers.scss */
.speaker .info h4::before, .speaker .info h4::after {
  color: #fdc200;
  font-weight: bold;
}

@media (min-width: 62em) {
  /* line 114, src/styles/components/_speakers.scss */
  .speaker .info h4::before, .speaker .info h4::after {
    color: #fdc200;
  }
}

/* line 124, src/styles/components/_speakers.scss */
.speaker .info h4::before {
  content: "<";
  margin-right: 0.3125em;
}

/* line 129, src/styles/components/_speakers.scss */
.speaker .info h4::after {
  content: ">";
  margin-left: 0.3125em;
}

/* line 135, src/styles/components/_speakers.scss */
.speaker .info a {
  color: #333;
  margin-top: 0.625rem;
  margin-bottom: 0.625rem;
}

@media (min-width: 62em) {
  /* line 135, src/styles/components/_speakers.scss */
  .speaker .info a {
    color: #fff;
  }
}

@media (min-width: 62em) {
  /* line 146, src/styles/components/_speakers.scss */
  .speaker .info a:hover, .speaker .info a:focus {
    color: #000000;
  }
}

@media (min-width: 62em) {
  /* line 154, src/styles/components/_speakers.scss */
  .speaker .info p {
    font-size: 0.875rem;
  }
}

/* line 1, src/styles/components/_schedule.scss */
.schedule {
  background: #333333;
  color: #fff;
  padding-bottom: 1.875rem;
}

/* line 6, src/styles/components/_schedule.scss */
.schedule .wrapper {
  max-width: 100%;
}

/* line 10, src/styles/components/_schedule.scss */
.schedule .schedule-table {
  max-width: 100%;
  overflow-x: auto;
}

@media (min-width: 62em) {
  /* line 10, src/styles/components/_schedule.scss */
  .schedule .schedule-table {
    overflow-x: initial;
  }
}

/* line 19, src/styles/components/_schedule.scss */
.schedule .mobile-disclaimer {
  color: #ababab;
  font-style: italic;
}

@media (min-width: 62em) {
  /* line 19, src/styles/components/_schedule.scss */
  .schedule .mobile-disclaimer {
    display: none;
  }
}

/* line 28, src/styles/components/_schedule.scss */
.schedule h2 {
  color: #fff;
}

/* line 32, src/styles/components/_schedule.scss */
.schedule a {
  color: #fff;
  border-bottom: solid 0.125rem #fdc200;
  margin-bottom: 0.625rem;
}

/* line 37, src/styles/components/_schedule.scss */
.schedule a:hover, .schedule a:focus {
  color: #000000;
}

/* line 43, src/styles/components/_schedule.scss */
.schedule .title {
  color: #fdc200;
  font-weight: bold;
  font-size: 1.25rem;
  border: 0;
  text-align: left;
  padding-bottom: 0.625rem;
}

/* line 52, src/styles/components/_schedule.scss */
.schedule table {
  width: 100%;
}

/* line 55, src/styles/components/_schedule.scss */
.schedule table div {
  opacity: .8;
}

/* line 61, src/styles/components/_schedule.scss */
.schedule thead th {
  font-size: 1.25rem;
  vertical-align: middle;
}

/* line 67, src/styles/components/_schedule.scss */
.schedule th {
  text-align: center;
  color: #fdc200;
}

/* line 71, src/styles/components/_schedule.scss */
.schedule th span {
  display: block;
  color: #fff;
  font-size: 0.875rem;
}

/* line 78, src/styles/components/_schedule.scss */
.schedule th,
.schedule td {
  position: relative;
  padding: 1.25rem 1.875rem;
}

/* line 85, src/styles/components/_schedule.scss */
.schedule tbody th,
.schedule tbody td {
  border-top: solid 0.0625rem #ababab;
}

/* line 90, src/styles/components/_schedule.scss */
.schedule tbody [rowspan] {
  border-left: solid 0.0625rem #ababab;
}

/* line 94, src/styles/components/_schedule.scss */
.schedule tbody [colspan="3"] {
  background-color: rgba(255, 255, 255, 0.1);
}

/* line 98, src/styles/components/_schedule.scss */
.schedule tbody td {
  min-width: 17.5rem;
}

@media (min-width: 62em) {
  /* line 98, src/styles/components/_schedule.scss */
  .schedule tbody td {
    min-width: auto;
  }
}

/* line 107, src/styles/components/_schedule.scss */
.schedule p {
  max-width: 100%;
}

/* line 111, src/styles/components/_schedule.scss */
.schedule .highlight-uppercase {
  text-transform: uppercase;
}

@media (min-width: 62em) {
  /* line 35, src/styles/tools/mixins/objects/_clearfix.scss */
  .location .wrapper::after {
    content: '';
    display: table;
    clear: both;
  }
  /* line 6, src/styles/components/_location.scss */
  .location .wrapper div {
    float: left;
    width: 50%;
    text-align: left;
  }
}

/* line 14, src/styles/components/_location.scss */
.location iframe {
  display: none;
}

@media (min-width: 62em) {
  /* line 14, src/styles/components/_location.scss */
  .location iframe {
    display: block;
    float: right;
    margin-top: 1.875rem;
    margin-bottom: 1.875rem;
  }
}

/* line 2, src/styles/components/_sponsors.scss */
.sponsors h3 {
  position: relative;
  margin-top: 1.875rem;
  padding-top: 1.875rem;
}

/* line 8, src/styles/components/_separator.scss */
.sponsors h3::before, .sponsors h3::after {
  content: '';
  display: inline-block;
  width: 30vw;
  height: 0.1875rem;
  position: absolute;
  left: 50%;
}

/* line 16, src/styles/components/_separator.scss */
.sponsors h3::before {
  top: 0;
  background-color: #fdc200;
  -webkit-transform: translateX(-80%);
          transform: translateX(-80%);
}

/* line 22, src/styles/components/_separator.scss */
.sponsors h3::after {
  top: 0.375rem;
  background-color: #666;
  -webkit-transform: translateX(-25%);
          transform: translateX(-25%);
}

/* line 6, src/styles/components/_sponsors.scss */
.sponsors a {
  margin-top: 0.625rem;
  margin-bottom: 0.625rem;
  padding: 0;
  border: 0;
}

@media (min-width: 62em) {
  /* line 6, src/styles/components/_sponsors.scss */
  .sponsors a {
    margin-top: 1.25rem;
    margin-bottom: 1.25rem;
  }
}

/* line 21, src/styles/components/_sponsors.scss */
.sponsors a:hover, .sponsors a:focus {
  background-color: #f0f0f0;
}

/* line 26, src/styles/components/_sponsors.scss */
.sponsors a:active {
  background-color: #f4d11e;
}

/* line 31, src/styles/components/_sponsors.scss */
.sponsors img {
  display: block;
  width: 100%;
}

/* line 36, src/styles/components/_sponsors.scss */
.sponsors .sponsor {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  align-content: center;
  max-width: 67.5rem;
}

/* line 45, src/styles/components/_sponsors.scss */
.sponsors .two-mega {
  position: relative;
  margin-top: 1.875rem;
  padding-top: 1.875rem;
}

/* line 8, src/styles/components/_separator.scss */
.sponsors .two-mega::before, .sponsors .two-mega::after {
  content: '';
  display: inline-block;
  width: 30vw;
  height: 0.1875rem;
  position: absolute;
  left: 50%;
}

/* line 16, src/styles/components/_separator.scss */
.sponsors .two-mega::before {
  top: 0;
  background-color: #fdc200;
  -webkit-transform: translateX(-80%);
          transform: translateX(-80%);
}

/* line 22, src/styles/components/_separator.scss */
.sponsors .two-mega::after {
  top: 0.375rem;
  background-color: #666;
  -webkit-transform: translateX(-25%);
          transform: translateX(-25%);
}

/* line 48, src/styles/components/_sponsors.scss */
.sponsors .two-mega a {
  max-width: 16.875rem;
}

/* line 53, src/styles/components/_sponsors.scss */
.sponsors .one-mega {
  position: relative;
  margin-top: 1.875rem;
  padding-top: 1.875rem;
}

/* line 8, src/styles/components/_separator.scss */
.sponsors .one-mega::before, .sponsors .one-mega::after {
  content: '';
  display: inline-block;
  width: 30vw;
  height: 0.1875rem;
  position: absolute;
  left: 50%;
}

/* line 16, src/styles/components/_separator.scss */
.sponsors .one-mega::before {
  top: 0;
  background-color: #fdc200;
  -webkit-transform: translateX(-80%);
          transform: translateX(-80%);
}

/* line 22, src/styles/components/_separator.scss */
.sponsors .one-mega::after {
  top: 0.375rem;
  background-color: #666;
  -webkit-transform: translateX(-25%);
          transform: translateX(-25%);
}

/* line 56, src/styles/components/_sponsors.scss */
.sponsors .one-mega a {
  width: 65vw;
  max-width: 13.75rem;
}

/* line 62, src/styles/components/_sponsors.scss */
.sponsors .half-mega {
  position: relative;
  margin-top: 1.875rem;
  padding-top: 1.875rem;
}

/* line 8, src/styles/components/_separator.scss */
.sponsors .half-mega::before, .sponsors .half-mega::after {
  content: '';
  display: inline-block;
  width: 30vw;
  height: 0.1875rem;
  position: absolute;
  left: 50%;
}

/* line 16, src/styles/components/_separator.scss */
.sponsors .half-mega::before {
  top: 0;
  background-color: #fdc200;
  -webkit-transform: translateX(-80%);
          transform: translateX(-80%);
}

/* line 22, src/styles/components/_separator.scss */
.sponsors .half-mega::after {
  top: 0.375rem;
  background-color: #666;
  -webkit-transform: translateX(-25%);
          transform: translateX(-25%);
}

/* line 65, src/styles/components/_sponsors.scss */
.sponsors .half-mega a {
  width: 50vw;
  max-width: 9.375rem;
}

/* line 72, src/styles/components/_sponsors.scss */
.sponsors .support a {
  max-width: 6.875rem;
}

/* line 1, src/styles/components/_footer.scss */
.footer {
  background: #333333;
  color: #fdc200;
  font-size: 0.875rem;
}

/* line 6, src/styles/components/_footer.scss */
.footer h5 {
  font-weight: bold;
  text-transform: uppercase;
}

/* line 16, src/styles/main.scss */
body {
  font-family: "Lato", sans-serif;
  color: #333;
}

/* line 21, src/styles/main.scss */
h1 {
  font-size: 1.6875rem;
}

/* line 25, src/styles/main.scss */
h2 {
  font-size: 1.6875rem;
  font-weight: bold;
  margin-bottom: 1.25rem;
  color: #000000;
  padding-top: 1.25rem;
}

/* line 32, src/styles/main.scss */
h2::before, h2::after {
  color: #fdc200;
  font-weight: bold;
}

/* line 38, src/styles/main.scss */
h2::before {
  content: "<";
  margin-right: 0.3125em;
}

/* line 43, src/styles/main.scss */
h2::after {
  content: ">";
  margin-left: 0.3125em;
}

/* line 49, src/styles/main.scss */
h3 {
  font-size: 1.25rem;
  font-weight: bold;
  margin: 3.75rem 0 1.25rem;
  color: #000000;
}

@media (min-width: 62em) {
  /* line 49, src/styles/main.scss */
  h3 {
    font-size: 1.6875rem;
  }
}

/* line 60, src/styles/main.scss */
svg {
  fill: currentColor;
  vertical-align: middle;
  display: inline-block;
}

/* line 66, src/styles/main.scss */
a {
  display: inline-block;
  font-weight: bold;
  color: #000000;
  display: inline-block;
  border-bottom: solid 0.125rem #333;
  padding: 0.1875rem 0.3125rem;
}

/* line 75, src/styles/main.scss */
a:hover, a:focus {
  background-color: #f4d11e;
}

/* line 80, src/styles/main.scss */
a:active {
  background-color: #fff;
}

/* line 85, src/styles/main.scss */
p {
  width: 100%;
  max-width: 43.75rem;
  margin-left: auto;
  margin-right: auto;
}

/* line 93, src/styles/main.scss */
p + p {
  margin-top: 1.25rem;
}

/* line 98, src/styles/main.scss */
strong {
  font-weight: bold;
  color: #000000;
}

/* line 103, src/styles/main.scss */
table {
  max-width: 100%;
}

/* line 107, src/styles/main.scss */
section {
  width: 100%;
  padding-top: 1.875rem;
  padding-bottom: 1.875rem;
}

/* line 115, src/styles/main.scss */
.wrapper {
  margin: 0 auto;
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
  width: 85vw;
  max-width: 100%;
  text-align: center;
}

@media (min-width: 62em) {
  /* line 115, src/styles/main.scss */
  .wrapper {
    max-width: 68.75rem;
  }
}

/* line 130, src/styles/main.scss */
.highlight {
  font-weight: bold;
  margin: 1.875rem auto 1.25rem;
  max-width: 100%;
}

@media (min-width: 62em) {
  /* line 130, src/styles/main.scss */
  .highlight {
    font-size: 1.25rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
