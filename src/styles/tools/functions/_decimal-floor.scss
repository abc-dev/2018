/// Arredonda números de acordo com a quantidade de dígitos especificados
/// utilizando a técnica `floor`
///
/// Baseado na função de Takeru Suzuki https://gist.github.com/terkel/4373420
/// @access private
///
/// @group   Tools [Ferramentas]
///
/// @param  {Number} $number - Número a ser arredondado
/// @param  {Number} $digits [0] - Quantidade de dígitos do ponto flutuante
///
/// @return {Number} Número arredondado
///
/// @example scss - Uso
///     _decimal-floor(0.333)    => 0
///     _decimal-floor(0.333, 1) => 0.3
///     _decimal-floor(0.333, 2) => 0.33
///     _decimal-floor(0.666)    => 1
///     _decimal-floor(0.666, 1) => 0.6
///     _decimal-floor(0.666, 2) => 0.66
@function _decimal-floor($number, $digits: 0) {
  $n: 1;
  $result: null;
  $number: _clean-unit($number);

  @if type-of($number) != number {
    @warn '#{$number} precisa ser um numero.';
    @return $result;
  }

  @if type-of($digits) != number {
    @warn '#{$digits} precisa ser um numero.';
    @return $result;
  }

  @if $digits > 0 {
    @for $i from 1 through $digits {
      $n: $n * 10;
    }
  }

  $result: floor($number * $n) / $n;

  @return $result;
}
